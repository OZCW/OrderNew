networks:
  prod_api_postgres:

volumes:
  postgres-data-orders:
  pgadmin:

services:
  application:
    image: orders_api:latest
    build:
      context: .
    restart: "no"
    container_name: application
    ports:
      - 8080:8080
    networks:
      - prod_api_postgres
    environment:
      - SPRING_DATASOURCE_URL=jdbc:postgresql://postgres:5432/OrdersDB?autoreconnect=true&createDatabaseIfNotExist=true&characterEncoding=utf8
      - SPRING_JPA_HIBERNATE_DDL_AUTO=update
      - SPRING_DATASOURCE_USERNAME=ordersUser
      - SPRING_DATASOURCE_PASSWORD=secret
    depends_on:
      - postgres



  postgres:
    image: 'postgres:16.3'
    container_name: postgres_order_with_connection
    networks:
      - prod_api_postgres
    environment:
      - 'POSTGRES_DB=OrdersDB'
      - 'POSTGRES_PASSWORD=secret'
      - 'POSTGRES_USER=ordersUser'
    ports:
      - '5432:5432'
    volumes:
      - postgres-data-orders:/var/lib/postgresql/data

#  pgadmin:
#    container_name: pgadmin4_container
#    image: dpage/pgadmin4:latest
#    restart: always
#    environment:
#      PGADMIN_DEFAULT_EMAIL: admin@admin.com
#      PGADMIN_DEFAULT_PASSWORD: root
#      PGADMIN_LISTEN_PORT: 5050
#    ports:
#      - "5050:5050"
#    depends_on:
#      - postgres
#    networks:
#      - prod_api_postgres


